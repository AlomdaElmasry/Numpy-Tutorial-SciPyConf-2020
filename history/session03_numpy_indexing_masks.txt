a = 4
print(a)
slice(a)
a = np.arange(25)
import numpy as np
a = np.arange(25)
a
a = np.arange(25).reshape(5, 5)
a
a[-1]
a[4]
a[4, :]
a[:, 1::2]
a[1::2, 0::2]
a[1::2, 0:3:2]
a[:, 1::2]
a[1::2]
a[1::2, 1:4:2]
a[1::2, 0:3:2]
a[4]
a[-1]
a = np.array([0, 1, 2, 3, 4])
a
a[2:4]
b = a[2:4]
b
b[0] = 10
b
a
b[1] = 33
a
a[2] = -99
a
b
a[2:4]
c = a[2:4].copy()
c
c[0] = 1000
c
a
b
a = np.arange(0, 80, 10)
a
indices = [1, 2, -3]
y = a[indices]
y
a[[1,2,3]]
a[[1,2,3,1,1,2,3,1]]
a
a[indices] = 99
a
mask = np.array([0, 1, 1, 0, 0, 1, 0, 0], dtype=bool)
mask
a[mask]
a
z = a[mask]
print(z)
z
z
z[0] = 1
z
a
a
a[a >= 99]
a >= 99
a = np.arange(25).reshape(5,5)
a
rows = [0, 1, 2, 3]
cols = [1, 2, 3, 4]
a[rows, cols]
list(zip(rows,cols))
a
a > 23
a > 20
a == 4
a % 3
a % 3 == 0
mask = a % 3 == 0
mask
a[mask]
a[a % 3 == 0]
a > 15
rows
cols
a[rows, cols]
a[[0,1,2,3], [1,2,3,4]]
zip(rows, cols)
list(zip(rows, cols))
np.arange(6) + np.arange(0, 60, 10).reshape(-6, 1)
a %3
a % 3 == 0
m = a % 3 == 0
m.dtype
m.shape
a = np.array([0,1,2,3])
a.shape
b = np.array([0,1,2,3]).reshape(1,4)
b.shape
a.ndim
b.ndim
b
a
b[0]
a[0]
a = np.array([[1,2,3],[4,5,6]])
a
a.sum()
a.sum(axis=0)
a.shape
a.sum(axis=1)
a.mean()
a.max()
a.max(axis=0)
a
a.min()
a.argmin()
a.max()
a.argmax()
np.unravel_index(0, a.shape)
np.unravel_index(5, a.shape)
np.unravel_index(a.argmin(), a.shape)
np.unravel_index(a.argmax(), a.shape)
a = np.arange(-2, 2) **2
a
a % 2 == 0
mask = a % 2 == 0
a[mask]
np.where(mask)
positives = np.arange(4)
negatives = -positives
positives
negatives
mask
np.where(mask, positives, negatives)
np.where(mask, positives, 99)
np.where(mask, -99, negatives)
